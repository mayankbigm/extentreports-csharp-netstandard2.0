@using AventStack.ExtentReports

<!DOCTYPE html>
<html lang="en">
	@Include("CommonsHead")
	<script type="text/javascript">
		/*! json-tree - v0.2.2 - 2017-09-25, MIT LICENSE */
		var JSONTree=function(){var n={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#x27;","/":"&#x2F;"},t=0,r=0;this.create=function(n,t){return r+=1,N(u(n,0,!1),{class:"jstValue"})};var e=function(t){return t.replace(/[&<>'"]/g,function(t){return n[t]})},s=function(){return r+"_"+t++},u=function(n,t,r){if(null===n)return f(r?t:0);switch(typeof n){case"boolean":return l(n,r?t:0);case"number":return i(n,r?t:0);case"string":return o(n,r?t:0);default:return n instanceof Array?a(n,t,r):c(n,t,r)}},c=function(n,t,r){var e=s(),u=Object.keys(n).map(function(r){return j(r,n[r],t+1,!0)}).join(m()),c=[g("{",r?t:0,e),N(u,{id:e}),p("}",t)].join("\n");return N(c,{})},a=function(n,t,r){var e=s(),c=n.map(function(n){return u(n,t+1,!0)}).join(m());return[g("[",r?t:0,e),N(c,{id:e}),p("]",t)].join("\n")},o=function(n,t){var r=e(JSON.stringify(n));return N(v(r,t),{class:"jstStr"})},i=function(n,t){return N(v(n,t),{class:"jstNum"})},l=function(n,t){return N(v(n,t),{class:"jstBool"})},f=function(n){return N(v("null",n),{class:"jstNull"})},j=function(n,t,r){var s=v(e(JSON.stringify(n))+": ",r),c=N(u(t,r,!1),{});return N(s+c,{class:"jstProperty"})},m=function(){return N(",\n",{class:"jstComma"})},N=function(n,t){return d("span",t,n)},d=function(n,t,r){return"<"+n+Object.keys(t).map(function(n){return" "+n+'="'+t[n]+'"'}).join("")+">"+r+"</"+n+">"},g=function(n,t,r){return N(v(n,t),{class:"jstBracket"})+N("",{class:"jstFold",onclick:"JSONTree.toggle('"+r+"')"})};this.toggle=function(n){var t=document.getElementById(n),r=t.parentNode,e=t.previousElementSibling;""===t.className?(t.className="jstHiddenBlock",r.className="jstFolded",e.className="jstExpand"):(t.className="",r.className="",e.className="jstFold")};var p=function(n,t){return N(v(n,t),{})},v=function(n,t){return Array(2*t+1).join(" ")+n};return this}();
	</script>
	<body class="@Model.MasterConfig.GetValue("theme")">
		<div class="app" id="app">
			@Include("CommonsNav")
			<div id="content" class="app-content box-shadow-0" role="main">
				<div id="content" class="app-content box-shadow-2 box-radius-2" role="main">
					<div class="content-header white  box-shadow-2" id="content-header">
						<div class="navbar navbar-expand-lg">
							<div class="input-group flex mr-1">
				              	<input id="qt" type="text" class="form-control px-0 no-bg no-border no-shadow search" placeholder="Search..." required="">
				              	<span class="input-group-btn">
				                	<button class="btn no-bg no-border no-shadow" type="button"><i class="fa fa-search text-muted text-xs"></i></button>
				              	</span>
				            </div>
							<ul class="nav nav-xs flex-row no-border pull-right">
								<li class="nav-item dropdown">
									<a class="nav-link b-l" data-toggle="dropdown">
									<span class="text-xs">
									<i class="fa fa-warning"></i>
									<i class="fa fa-caret-down"></i>
									</span>
									</a>
									<div class="dropdown-menu pt-0 mt-2 animate fadeIn">
										@if (Model.ContainsStatus(Status.Pass)){<a class="dropdown-item" href="#"><span class="tf" status="pass"><i class="fa fa-dot-circle-o text-success"></i>Pass</span></a>}
										@if (Model.ContainsStatus(Status.Fail)){<a class="dropdown-item" href="#"><span class="tf" status="fail"><i class="fa fa-dot-circle-o text-danger"></i>Fail</span></a>}
										@if (Model.ContainsStatus(Status.Fatal)){<a class="dropdown-item" href="#"><span class="tf" status="fatal"><i class="fa fa-dot-circle-o text-danger"></i>Fatal</span></a>}
										@if (Model.ContainsStatus(Status.Error)){<a class="dropdown-item" href="#"><span class="tf" status="error"><i class="fa fa-dot-circle-o text-warning"></i>Error</span></a>}
										@if (Model.ContainsStatus(Status.Warning)){<a class="dropdown-item" href="#"><span class="tf" status="warning"><i class="fa fa-dot-circle-o text-warning"></i>Warning</span></a>}
										@if (Model.ContainsStatus(Status.Skip)){<a class="dropdown-item" href="#"><span class="tf" status="skip"><i class="fa fa-dot-circle-o text-blue"></i>Skip</span></a>}
										<div class="dropdown-divider"></div>
										<a class="dropdown-item" href="#"><span class="tf" status="clear"><i class="fa fa-dot-circle-o text-warn"></i>Clear</span></a>
									</div>
								</li>
								@if (Model.CategoryContext.Context.Count > 0)
								{
						        <li class="nav-item dropdown">
							        <a class="nav-link b-l" data-toggle="dropdown">
							            <span class="text-xs">
								      		<i class="fa fa-tag"></i>
								      		<i class="fa fa-caret-down"></i>
								        </span>
							        </a>
							        <div class="dropdown-menu pt-0 mt-2 animate fadeIn">
							        	@foreach (var category in Model.CategoryContext.Context)
										{
						    	        <a class="dropdown-item" href="#"><span class="cf">@category.Name</span></a>
						    	        }
						    	        <div class="dropdown-divider"></div>
						    	        <a class="dropdown-item" href="#"><span class="tf" status="clear"><i class="fa fa-dot-circle-o text-warn"></i>Clear</span></a>
						    	    </div>
						        </li>
						        }
						        @if (Model.DeviceContext.Context.Count > 0)
								{
						        <li class="nav-item dropdown">
							        <a class="nav-link b-l" data-toggle="dropdown">
							            <span class="text-xs">
								      		<i class="fa fa-tablet text-sm"></i>
								      		<i class="fa fa-caret-down"></i>
								        </span>
							        </a>
							        <div class="dropdown-menu pt-0 mt-2 animate fadeIn">
							        	@foreach (var device in Model.DeviceContext.Context)
										{
						    	        <a class="dropdown-item" href="#"><span class="df">@device.Name</span></a>
						    	        }
						    	        <div class="dropdown-divider"></div>
						    	        <a class="dropdown-item" href="#"><span class="tf" status="clear"><i class="fa fa-dot-circle-o text-warn"></i>Clear</span></a>
						    	      </div>
						        </li>
						        }
						        <li class="nav-item lightsout"><a class="nav-link b-l" href="#"><span><i class="fa fa-desktop"></i></span></a></li>
								<li><a href="#" class="b-l"><span class="badge badge-pull">@Model.MasterConfig.GetValue("reportName")</span></a></li>
								<li><a href="#" class="b-l"><span class="badge badge-pull">4.0</span></a></li>
							</ul>
						</div>
					</div>
					<div class="content-main" id="content-main">
						<div class="padding">
							<div class="row justify-content-md-center">
								<div class="col-md-8 col-sm-12">
									<div class="logger-content">
										<h6 class="mb-3 ml-1">Test Logs</h6>
										@foreach (var test in Model.TestList)
										{
											<div class="tsc" status="@test.Status.ToString().ToLower()">
												@Include("LoggerMacro", test)
												@foreach (var node in test.NodeContext.All())
												{
													@Include("LoggerMacro", node)
													foreach (var child in node.NodeContext.All())
													{
														@Include("LoggerMacro", child)
														foreach (var grandchild in child.NodeContext.All())
														{
															@Include("LoggerMacro", grandchild)
														}
													}
												}
											</div>
										}
									</div>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
		@{
			var p = "https://cdn.rawgit.com/extent-framework/extent-github-cdn/d74480e/logger/js/";
		}
		<script src="@(p)logger-scripts.js"></script>
		@Include("CommonsInjectJs", Model)
	</body>
</html>
